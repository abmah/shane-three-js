{"version":3,"file":"bundle.2b17ed96083feec2.js","mappings":"MAAWA,SAASC,uBAAuB,aAAa,GACxD,MAAMC,EAAaF,SAASG,eAAe,eACrCC,EAAmBJ,SAASK,cAAc,YAC1CC,EAAiBN,SAASK,cAAc,oBAC9C,IAAIE,EAAYP,SAASK,cAAc,eACvC,MAAMG,EAAiBR,SAASK,cAAc,wBAC9C,IAAII,EAAmBT,SAASK,cAAc,8BA6D9C,SAASK,IACP,MAAMC,EAAaT,EAAWU,MAAMC,OAEpC,IAfmB,6BACDC,KAcCH,GAMjB,OALAP,EAAiBW,YAAc,6BAE/BC,YAAW,KACTZ,EAAiBW,YAAc,KAC9B,KAILE,QAAQC,KAAK,qBACb,IAAIC,EAAiB,CACnBC,QAAST,GAGXP,EAAiBW,YAAc,aAE/BE,QAAQI,KAAK,kBAAmB,mBAAoBF,GACjDG,MAAK,SAAUC,GACdf,EAAegB,MAAMC,QAAU,QAC/BrB,EAAiBsB,UAAY,0BAC7BC,QAAQC,IAAI,WAAYL,EAASM,OAAQN,EAASO,MAClD5B,EAAWU,MAAQ,GACnBH,EAAiBe,MAAMC,QAAU,OACjCT,YAAW,KACTV,EAAeyB,UAAUC,IAAI,YAC5B,QAEJC,OAAM,SAAUC,GACf9B,EAAiBW,YAAc,uBAC/BC,YAAW,KACTZ,EAAiBW,YAAc,KAC9B,KACHY,QAAQC,IAAI,YAAaM,GACzBhC,EAAWU,MAAQ,MA3CzBV,EAAWiC,iBAAiB,WAAW,SAAUC,GAC7B,UAAdA,EAAMC,KACR3B,OA8CJ4B,OAAOC,eA/EP,WACEjC,EAAeyB,UAAUS,OAAO,UAChCjC,EAAUwB,UAAUS,OAAO,eAC3BlC,EAAemC,SA6EjBH,OAAOI,eAzEP,WACEpC,EAAeyB,UAAUC,IAAI,WAyE/BM,OAAOK,cApEP,WACEpC,EAAUwB,UAAUC,IAAI,gBAoE1BM,OAAOM,cAjEP,WACErC,EAAUwB,UAAUS,OAAO,gBAiE7BF,OAAO5B,UAAYA,EACnB4B,OAAOO,WAOP,SAAoBC,GAClB,MAAMC,EAAS/C,SAASgD,iBAAiB,UACzCD,EAAOE,SAAQ,CAACC,EAAOC,KACrB,MAAMC,EAAUF,EAAM7C,cAAc,YAC9BgD,EARV,SAAaP,EAAKQ,GAChB,OAAOR,EAAIS,WAAWC,SAASF,EAAM,KAOrBG,CAAIX,EAAKC,EAAOW,QAC9BR,EAAMS,QAAQC,UAAYR,EAAQrC,YAClCmC,EAAMS,QAAQE,QAAUR,EAAMF,GAC9BC,EAAQO,QAAQC,UAAYR,EAAQrC,YACpCqC,EAAQO,QAAQE,QAAUR,EAAMF,GAChCC,EAAQrC,YAAcsC,EAAMF,GAC5BD,EAAMnB,UAAU+B,OAAO,OAAQZ,EAAMS,QAAQC,YAAcR,EAAQrC,iBAKtDf,SAASgD,iBAAiB,UAClCC,SAASC,IACEA,EAAM7C,cAAc,YAC5B8B,iBAAiB,gBAAgB,KACvCe,EAAMnB,UAAUS,OAAO,e","sources":["webpack:///./src/common.js"],"sourcesContent":["let menu = document.getElementsByClassName(\"menu-list\")[0];\r\nconst emailInput = document.getElementById(\"email-input\");\r\nconst messageContainer = document.querySelector(\".message\");\r\nconst emailContainer = document.querySelector(\".email-container\");\r\nlet aboutcard = document.querySelector('.about-card');\r\nconst successMessage = document.querySelector(\".email-input-success\");\r\nlet initalEmailInput = document.querySelector('.inital-email-submit-input')\r\n\r\n\r\n// Toggle menu button actions\r\nlet buttonToggle = () => {\r\n  const button = document.getElementById(\"menu-button\").classList;\r\n  const isopened = \"is-opened\";\r\n  let isOpen = button.contains(isopened);\r\n\r\n  if (isOpen) {\r\n    button.remove(isopened);\r\n\r\n  } else {\r\n    button.add(isopened);\r\n  }\r\n\r\n  menu.style.transform = isOpen ? \"translateX(-100%)\" : \"translateX(0)\";\r\n};\r\n\r\n\r\n\r\n\r\n// Show email input\r\nfunction showEmailInput() {\r\n  emailContainer.classList.remove(\"hidden\");\r\n  aboutcard.classList.remove('about-shown')\r\n  emailContainer.focus();\r\n}\r\n\r\n// Hide email input\r\nfunction hideEmailInput() {\r\n  emailContainer.classList.add('hidden');\r\n}\r\n\r\n\r\n// about card\r\nfunction showAboutCard() {\r\n  aboutcard.classList.add('about-shown')\r\n}\r\n\r\nfunction hideAboutCard() {\r\n  aboutcard.classList.remove('about-shown')\r\n}\r\n\r\n\r\n\r\n\r\n// Validate email format\r\nfunction validateEmail(email) {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\n// Send email on Enter key press\r\nemailInput.addEventListener(\"keydown\", function (event) {\r\n  if (event.key === \"Enter\") {\r\n    sendEmail();\r\n  }\r\n});\r\n\r\n// Send email function\r\nfunction sendEmail() {\r\n  const emailValue = emailInput.value.trim();\r\n\r\n  if (!validateEmail(emailValue)) {\r\n    messageContainer.textContent = 'Invalid email address';\r\n\r\n    setTimeout(() => {\r\n      messageContainer.textContent = \"\";\r\n    }, 1000);\r\n    return;\r\n  }\r\n\r\n  emailjs.init(\"dc8p-2hU5RtbKnhsI\");\r\n  var templateParams = {\r\n    message: emailValue\r\n  };\r\n\r\n  messageContainer.textContent = 'Sending...';\r\n\r\n  emailjs.send('service_thj6cx5', 'template_9rcg8sk', templateParams)\r\n    .then(function (response) {\r\n      successMessage.style.display = \"block\";\r\n      messageContainer.innerHTML = 'Email sent successfully';\r\n      console.log('SUCCESS!', response.status, response.text);\r\n      emailInput.value = \"\";\r\n      initalEmailInput.style.display = \"none\";\r\n      setTimeout(() => {\r\n        emailContainer.classList.add('hidden');\r\n      }, 3000);\r\n    })\r\n    .catch(function (error) {\r\n      messageContainer.textContent = 'Something Went Wrong';\r\n      setTimeout(() => {\r\n        messageContainer.textContent = \"\";\r\n      }, 1000);\r\n      console.log('FAILED...', error);\r\n      emailInput.value = \"\";\r\n    });\r\n}\r\n\r\n\r\nwindow.showEmailInput = showEmailInput;\r\nwindow.hideEmailInput = hideEmailInput;\r\nwindow.showAboutCard = showAboutCard;\r\nwindow.hideAboutCard = hideAboutCard;\r\nwindow.sendEmail = sendEmail;\r\nwindow.flipDigits = flipDigits;\r\n\r\n\r\nfunction pad(num, size) {\r\n  return num.toString().padStart(size, '0');\r\n}\r\n\r\nfunction flipDigits(num) {\r\n  const digits = document.querySelectorAll('.digit');\r\n  digits.forEach((digit, index) => {\r\n    const current = digit.querySelector('.current');\r\n    const chars = pad(num, digits.length);\r\n    digit.dataset.digitFrom = current.textContent;\r\n    digit.dataset.digitTo = chars[index];\r\n    current.dataset.digitFrom = current.textContent;\r\n    current.dataset.digitTo = chars[index];\r\n    current.textContent = chars[index];\r\n    digit.classList.toggle('flip', digit.dataset.digitFrom !== current.textContent);\r\n  });\r\n}\r\n\r\nfunction init() {\r\n  const digits = document.querySelectorAll('.digit');\r\n  digits.forEach((digit) => {\r\n    const current = digit.querySelector('.current');\r\n    current.addEventListener('animationend', () => {\r\n      digit.classList.remove('flip');\r\n    });\r\n  });\r\n\r\n}\r\ninit();\r\n\r\n\r\n"],"names":["document","getElementsByClassName","emailInput","getElementById","messageContainer","querySelector","emailContainer","aboutcard","successMessage","initalEmailInput","sendEmail","emailValue","value","trim","test","textContent","setTimeout","emailjs","init","templateParams","message","send","then","response","style","display","innerHTML","console","log","status","text","classList","add","catch","error","addEventListener","event","key","window","showEmailInput","remove","focus","hideEmailInput","showAboutCard","hideAboutCard","flipDigits","num","digits","querySelectorAll","forEach","digit","index","current","chars","size","toString","padStart","pad","length","dataset","digitFrom","digitTo","toggle"],"sourceRoot":""}